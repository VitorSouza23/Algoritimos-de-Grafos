/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package grafos;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author vilson.junior
 */
public class jnlGrafos extends javax.swing.JFrame {

    private Grafo grafo = new Grafo();
    
    /**
     * Creates new form jnlGrafos
     */
    public jnlGrafos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaRes = new javax.swing.JList();
        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        lblStatus = new javax.swing.JLabel();
        btnSalvar = new javax.swing.JButton();
        btnCarregar = new javax.swing.JButton();
        btnArcos = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btBuscaLargura = new javax.swing.JButton();
        btBuscaProfundidade = new javax.swing.JButton();
        brPrinfundidadeRecursiva = new javax.swing.JButton();
        btArvoregeradoraMinima = new javax.swing.JButton();
        btDijkstra = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Playground de Grafos");
        setResizable(false);

        jList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jList);

        listaRes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(listaRes);

        lblStatus.setText("Sem arquivo aberto.");

        btnSalvar.setText(" Salvar como");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnCarregar.setText("Carregar");
        btnCarregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarregarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnCarregar, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSalvar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblStatus)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStatus)
                    .addComponent(btnSalvar)
                    .addComponent(btnCarregar))
                .addGap(0, 6, Short.MAX_VALUE))
        );

        btnArcos.setText("Arcos >>");
        btnArcos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArcosActionPerformed(evt);
            }
        });

        jLabel1.setText("Vértices:");

        jLabel2.setText("Resultados:");

        btBuscaLargura.setText("Busca Largura >>");
        btBuscaLargura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscaLarguraActionPerformed(evt);
            }
        });

        btBuscaProfundidade.setText("Busca Profundidade >>");
        btBuscaProfundidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscaProfundidadeActionPerformed(evt);
            }
        });

        brPrinfundidadeRecursiva.setText("B. Prof. Recursiva >>");
        brPrinfundidadeRecursiva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brPrinfundidadeRecursivaActionPerformed(evt);
            }
        });

        btArvoregeradoraMinima.setText("Árv. Ger. Míni. >>");
        btArvoregeradoraMinima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btArvoregeradoraMinimaActionPerformed(evt);
            }
        });

        btDijkstra.setText("Dijkstra >>");
        btDijkstra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDijkstraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnArcos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btBuscaLargura, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btBuscaProfundidade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(brPrinfundidadeRecursiva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btArvoregeradoraMinima, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btDijkstra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnArcos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btBuscaLargura)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btBuscaProfundidade)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(brPrinfundidadeRecursiva)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btArvoregeradoraMinima)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btDijkstra)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        final JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.SAVE_DIALOG);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Grafo", "grf");
        fc.setFileFilter(filter);
        fc.setAcceptAllFileFilterUsed(true);
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fc.setDialogTitle("Salvar arquivo do Grafo");
        int returnVal = fc.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File arqSaida = fc.getSelectedFile();
/*            try {
                this.grafo.gravarArquivo(arqSaida);
            } catch (IOException ex) {
                Logger.getLogger(jnlGrafos.class.getName()).log(Level.SEVERE, null, ex);
            }*/
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnCarregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarregarActionPerformed
        final JFileChooser fc = new JFileChooser();
        fc.setDialogType(JFileChooser.OPEN_DIALOG);
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Grafo", "grf");
        fc.setFileFilter(filter);
        fc.setDialogTitle("Abrir arquivo do Grafo");
        int returnVal = fc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File arqImg = fc.getSelectedFile();
            try {
                this.grafo = new Grafo();
                this.grafo.lerArquivo(arqImg);
                lblStatus.setText(arqImg.getName());
                jList.removeAll();
                jList.setListData(grafo.obterVertices().toArray());
            } catch (IOException ex) {
                Logger.getLogger(jnlGrafos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnCarregarActionPerformed

    private void btnArcosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArcosActionPerformed
        if (jList.getSelectedValue() != null) {
            Vertice selecionado = (Vertice)jList.getSelectedValue();
            listaRes.removeAll();
            listaRes.setListData(selecionado.obterArcos().toArray());
        }
    }//GEN-LAST:event_btnArcosActionPerformed

    private void btBuscaLarguraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscaLarguraActionPerformed
        if (jList.getSelectedValue() != null) {
            Vertice selecionado = (Vertice)jList.getSelectedValue();
            listaRes.removeAll();
            ArrayList<String> verticesCompeso = new ArrayList<>();
            for(Vertice v : Algoritmos.percorreLargura(this.grafo, selecionado)){
                String vert = v.toString() + " - " + Double.toString(v.obterDistancia());
                verticesCompeso.add(vert);
            }
            listaRes.setListData(verticesCompeso.toArray());
        }
    }//GEN-LAST:event_btBuscaLarguraActionPerformed

    private void btBuscaProfundidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscaProfundidadeActionPerformed
        if (jList.getSelectedValue() != null) {
            Vertice selecionado = (Vertice)jList.getSelectedValue();
            listaRes.removeAll();
            ArrayList<String> verticesCompeso = new ArrayList<>();
            for(Vertice v : Algoritmos.percorreProfundidade(this.grafo, selecionado)){
                String vert = v.toString() + " - " + Double.toString(v.obterDistancia());
                verticesCompeso.add(vert);
            }
            listaRes.setListData(verticesCompeso.toArray());
        }
    }//GEN-LAST:event_btBuscaProfundidadeActionPerformed

    private void brPrinfundidadeRecursivaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brPrinfundidadeRecursivaActionPerformed
        if (jList.getSelectedValue() != null) {
            Vertice selecionado = (Vertice)jList.getSelectedValue();
            listaRes.removeAll();
            ArrayList<String> verticesCompeso = new ArrayList<>();
            for(Vertice v : Algoritmos.percorreProfundidadeRecursiva(this.grafo, selecionado)){
                String vert = v.toString() + " - " + Double.toString(v.obterDistancia());
                verticesCompeso.add(vert);
            }
            listaRes.setListData(verticesCompeso.toArray());
        }
    }//GEN-LAST:event_brPrinfundidadeRecursivaActionPerformed

    private void btArvoregeradoraMinimaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btArvoregeradoraMinimaActionPerformed
        if(this.grafo != null){
            Algoritmos.arvoreGeradoraMinima(grafo);
            JOptionPane.showMessageDialog(jList, "Árvore Geradora Mínima criada com sucesso!", "Sucesso!", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btArvoregeradoraMinimaActionPerformed

    private void btDijkstraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDijkstraActionPerformed
        if (jList.getSelectedValue() != null) {
            Vertice selecionado = (Vertice)jList.getSelectedValue();
            listaRes.removeAll();
            ArrayList<String> verticesMinimos = new ArrayList<>();
            for(Vertice v : Algoritmos.algoritimoDijkstra(this.grafo, selecionado)){
                String vert = v.toString() + " - Cam: " + v.getCaminho() + " - Dis: " + v.obterDistancia();
                verticesMinimos.add(vert);
            }
            listaRes.setListData(verticesMinimos.toArray());
        }
    }//GEN-LAST:event_btDijkstraActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jnlGrafos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jnlGrafos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jnlGrafos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jnlGrafos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                jnlGrafos jnl = new jnlGrafos();
                jnl.setLocationRelativeTo(null);
                jnl.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton brPrinfundidadeRecursiva;
    private javax.swing.JButton btArvoregeradoraMinima;
    private javax.swing.JButton btBuscaLargura;
    private javax.swing.JButton btBuscaProfundidade;
    private javax.swing.JButton btDijkstra;
    private javax.swing.JButton btnArcos;
    private javax.swing.JButton btnCarregar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList jList;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JList listaRes;
    // End of variables declaration//GEN-END:variables
}
